name: logging
services:
  setup:
   image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
   healthcheck:
     test: ["CMD-SHELL", "[ -f config/certs/elasticsearch/elasticsearch.crt ]"]
     interval: 1s
     timeout: 5s
     retries: 120
   volumes:
     - certs:/usr/share/elasticsearch/config/certs
     - ./entrypoint.sh:/usr/share/elasticsearch/entrypoint.sh
   user: "0"
   entrypoint: /usr/share/elasticsearch/entrypoint.sh
   
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9200"]
      interval: 30s
      timeout: 10s
      retries: 3
    container_name: elasticsearch
    environment:
    - node.name=elasticsearch
    - discovery.type=single-node
    - bootstrap.memory_lock=true
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    - xpack.security.enabled=true
    - xpack.security.http.ssl.enabled=true
    - xpack.security.http.ssl.key=certs/elasticsearch/elasticsearch.key
    - xpack.security.http.ssl.certificate=certs/elasticsearch/elasticsearch.crt
    - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
    - xpack.security.transport.ssl.enabled=true
    - xpack.security.transport.ssl.key=certs/elasticsearch/elasticsearch.key
    - xpack.security.transport.ssl.certificate=certs/elasticsearch/elasticsearch.crt
    - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
    - xpack.security.transport.ssl.verification_mode=certificate
    - xpack.license.self_generated.type=basic
    - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
    depends_on:
     setup:
       condition: service_healthy

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - SERVER_SSL_ENABLED=true
      - SERVER_SSL_KEY=/usr/share/kibana/config/certs/kibana/kibana.key
      - SERVER_SSL_CERTIFICATE=/usr/share/kibana/config/certs/kibana/kibana.crt
      - SERVER_SSL_CERTIFICATEAUTHORITIES=/usr/share/kibana/config/certs/ca/ca.crt
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
      - XPACK_SECURITY_ENCRYPTIONKEY=${ENCRYPTION_KEY}
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${ENCRYPTION_KEY}
      - XPACK_REPORTING_ENCRYPTIONKEY=${ENCRYPTION_KEY}
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=None
    volumes:
      - certs:/usr/share/kibana/config/certs
    depends_on:
      elasticsearch:
        condition: service_healthy

  fluentd:
    container_name: fluentd
    user: root
    build:
      context: .
    image: fluentd
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
    # When you want to use default logging method uncomment the next 2 lines
    # - /var/lib/docker/containers:/fluentd/log/containers 
    # - ./logs:/output/test.log
    - ./configurations:/fluentd/etc/
    - certs:/opt/certs/
    # Copied localtime from /etc/localtime manually
    # - ./localtime:/etc/localtime
    # Uncomment above and comment below to sync time with your host doesn't work with the following
    - /etc/localtime:/etc/localtime:ro
    - /etc/timezone:/etc/timezone:ro
    logging:
      driver: "local"  
    depends_on:
      elasticsearch:
        condition: service_healthy

volumes:
  certs: